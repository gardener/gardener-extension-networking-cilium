apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.encryption.secretName | quote }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Values.global.encryption.secretName) | default (dict "data" (dict)) }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $ipsecSecret := ((get $secretData .Values.global.encryption.keyFile) | b64dec) | default "" }}
  {{- $ipsecSecretParts := (split " " $ipsecSecret) | default (list) }}
  {{- $ipsecKeyId := int ((trimSuffix "+" $ipsecSecretParts._0) | default .Values.global.encryption.ipsec.keyId) }}
  {{- $ipsecEncryptionAlgorithms := $ipsecSecretParts._1 | default .Values.global.encryption.ipsec.encryptionAlgorithms }}
  {{- $ipsecPreSharedKey := $ipsecSecretParts._2 | default .Values.global.encryption.ipsec.preSharedKey | default (randAlphaNum 32 | sha256sum) }}
  {{- $ipsecKeySize := $ipsecSecretParts._3 | default (.Values.global.encryption.ipsec.keySize | toJson) }}
  {{- $providedKeyId := int .Values.global.encryption.ipsec.keyId }}
  {{- if (or (lt $providedKeyId 1) (gt $providedKeyId 15)) }}
    {{- fail "ipsecKeyId must be a number between 1 and 15." }}
  {{- end }}
  {{- if (or (gt $providedKeyId $ipsecKeyId) (and (eq $ipsecKeyId 15) (eq $providedKeyId 1))) }}
    {{- if eq $ipsecPreSharedKey .Values.global.encryption.ipsec.preSharedKey }}
      {{- fail "it makes no sense to increase the KeyId without changing the ipsecPreSharedKey." }}
    {{- end }}
    {{- $ipsecKeyId = $providedKeyId }}
    {{- $ipsecPreSharedKey = .Values.global.encryption.ipsec.preSharedKey | default (randAlphaNum 32 | sha256sum) }}
  {{- else if (and (ne .Values.global.encryption.ipsec.preSharedKey "") (ne $ipsecPreSharedKey .Values.global.encryption.ipsec.preSharedKey)) }}
    {{- if (eq $ipsecKeyId 15) }}
      {{- $ipsecKeyId = 0 }}
    {{- end }}
    {{- $ipsecKeyId = add $ipsecKeyId 1 }}
    {{- $ipsecPreSharedKey = .Values.global.encryption.ipsec.preSharedKey }}
  {{- end }}
  # per-tunnel keys will be derived from the secret by adding the `+` sign to the keyId
  {{ .Values.global.encryption.keyFile }}: {{ printf "%s+ %s %s %s" ($ipsecKeyId | toJson) $ipsecEncryptionAlgorithms $ipsecPreSharedKey $ipsecKeySize | b64enc | quote }}
