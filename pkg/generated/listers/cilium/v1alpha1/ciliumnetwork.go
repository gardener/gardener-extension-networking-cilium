/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	v1alpha1 "k8s.io/cilium/pkg/apis/cilium/v1alpha1"
	"k8s.io/client-go/tools/cache"
)

// CiliumNetworkLister helps list CiliumNetworks.
type CiliumNetworkLister interface {
	// List lists all CiliumNetworks in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.CiliumNetwork, err error)
	// CiliumNetworks returns an object that can list and get CiliumNetworks.
	CiliumNetworks(namespace string) CiliumNetworkNamespaceLister
	CiliumNetworkListerExpansion
}

// ciliumNetworkLister implements the CiliumNetworkLister interface.
type ciliumNetworkLister struct {
	indexer cache.Indexer
}

// NewCiliumNetworkLister returns a new CiliumNetworkLister.
func NewCiliumNetworkLister(indexer cache.Indexer) CiliumNetworkLister {
	return &ciliumNetworkLister{indexer: indexer}
}

// List lists all CiliumNetworks in the indexer.
func (s *ciliumNetworkLister) List(selector labels.Selector) (ret []*v1alpha1.CiliumNetwork, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CiliumNetwork))
	})
	return ret, err
}

// CiliumNetworks returns an object that can list and get CiliumNetworks.
func (s *ciliumNetworkLister) CiliumNetworks(namespace string) CiliumNetworkNamespaceLister {
	return ciliumNetworkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CiliumNetworkNamespaceLister helps list and get CiliumNetworks.
type CiliumNetworkNamespaceLister interface {
	// List lists all CiliumNetworks in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.CiliumNetwork, err error)
	// Get retrieves the CiliumNetwork from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.CiliumNetwork, error)
	CiliumNetworkNamespaceListerExpansion
}

// ciliumNetworkNamespaceLister implements the CiliumNetworkNamespaceLister
// interface.
type ciliumNetworkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CiliumNetworks in the indexer for a given namespace.
func (s ciliumNetworkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CiliumNetwork, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CiliumNetwork))
	})
	return ret, err
}

// Get retrieves the CiliumNetwork from the indexer for a given namespace and name.
func (s ciliumNetworkNamespaceLister) Get(name string) (*v1alpha1.CiliumNetwork, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("ciliumnetwork"), name)
	}
	return obj.(*v1alpha1.CiliumNetwork), nil
}
